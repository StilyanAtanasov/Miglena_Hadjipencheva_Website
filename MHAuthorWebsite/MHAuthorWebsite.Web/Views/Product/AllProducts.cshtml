@using MHAuthorWebsite.Web.ViewModels.Product
@using static MHAuthorWebsite.GCommon.ApplicationRules.Pagination
@model ICollection<ProductCardViewModel>

@section Styles {
	<link rel="stylesheet" href="~/css/store.css" />
}

@{
	ViewData["Title"] = "Магазин";
	int currentPage = int.TryParse(Context.Request.Query["page"].ToString(), out int page) ? page : 1;
	int productsCount = ViewBag.ProductsCount ?? Model.Count;
	int totalPages = (int)Math.Ceiling((double)productsCount / PageSize);
}

<section class="page-wrapper flex-column">
	<h1 class="title">Магазин</h1>

	<section class="products">
		@foreach (var product in Model)
		{
			<div class="product flex-column clickable" data-details-url="@Url.Action("Details", "Product", new { productId = product.Id })">
				<h4><a class="name" asp-controller="Product" asp-action="Details" asp-route-id="@product.Id">@product.Name</a></h4>
				<span class="text-faded">@product.ProductType</span>
				<p class="description">@product.ShortDescription</p>
				<div class="price-box flex-row">
					<p class="price">@product.Price.ToString("F2") лв.</p>
					<span class="price-text @(product.IsAvailable ? "available" : "unavailable")">@(product.IsAvailable ? "В наличност" : "Изчерпана наличност")</span>
				</div>
				<div class="action-btns flex-row">
					<form asp-controller="Product" asp-action="ToggleLike" asp-route-id="@product.Id">
						<button type="submit" class="btn like @(product.IsLiked ? "liked" : "")">
							<span class="fa-stack">
								<i class="fa-regular fa-heart fa-stack-2x"></i>
								<i class="fa-solid fa-heart fa-stack-2x"></i>
							</span>
						</button>
					</form>
					<form asp-controller="Cart" asp-action="Add">
						<input type="hidden" name="productId" value="@product.Id" />
						<input type="hidden" name="quantity" value="1" />
						<button type="submit" class="btn order flex-row" @(product.IsAvailable ? "" : "disabled")>
							<i class="fa-solid fa-cart-shopping-fast"></i> Поръчай
						</button>
					</form>
				</div>
			</div>
		}
	</section>

	@if (totalPages > 1)
	{
		<div class="pagination-box flex-row">
			<ul role="list" class="pagination-btns flex-row">
				@{
					int firstPage = Math.Max(1, currentPage - 1);
					int lastPage = Math.Min(totalPages, firstPage + 2);

					firstPage = Math.Max(1, lastPage - 2);
				}
				@if (currentPage != firstPage)
				{
					<li title="Предишна страница" class="pagination-btn">
						<a asp-controller="Product" asp-action="AllProducts" asp-route-page="@(currentPage - 1)" class="link"><i class="fa-solid fa-arrow-left"></i></a>
					</li>
				}
				@for (int i = firstPage; i <= lastPage; i++)
				{
					<li class="pagination-btn">

						@{
							var i1 = i;
						}

						<a asp-controller="Product" asp-action="AllProducts" asp-route-page="@i1" class="link @(i1 == currentPage ? "current" : "")">@i1</a>
					</li>
				}
				@if (currentPage != totalPages)
				{
					<li title="Следваща страница" class="pagination-btn">
						<a asp-controller="Product" asp-action="AllProducts" asp-route-page="@(currentPage + 1)" class="link"><i class="fa-solid fa-arrow-right"></i></a>
					</li>
				}
			</ul>
		</div>
	}
</section>

@section Scripts {
	<script src="~/js/click.js"></script>
}